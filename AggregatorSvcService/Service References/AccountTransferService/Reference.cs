//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AggregatorSvcService.AccountTransferService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountTransferService.IAccountTransferService")]
    public interface IAccountTransferService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountTransferService/Execute", ReplyAction="http://tempuri.org/IAccountTransferService/ExecuteResponse")]
        Common.Entities.AccountTransferSvcResponse Execute(Common.AccountTransferSvcRequest workflowRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountTransferServiceChannel : AggregatorSvcService.AccountTransferService.IAccountTransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountTransferServiceClient : System.ServiceModel.ClientBase<AggregatorSvcService.AccountTransferService.IAccountTransferService>, AggregatorSvcService.AccountTransferService.IAccountTransferService {
        
        public AccountTransferServiceClient() {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountTransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountTransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.Entities.AccountTransferSvcResponse Execute(Common.AccountTransferSvcRequest workflowRequest) {
            return base.Channel.Execute(workflowRequest);
        }
    }
}
