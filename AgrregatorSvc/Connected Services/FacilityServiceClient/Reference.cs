//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgrregatorSvc.FacilityServiceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FacilityServiceClient.IFacilityService")]
    public interface IFacilityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityService/CreateFacility", ReplyAction="http://tempuri.org/IFacilityService/CreateFacilityResponse")]
        DataContractLibrary.FacilityResponse CreateFacility(DataContractLibrary.FacilityRequest value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityService/CreateFacility", ReplyAction="http://tempuri.org/IFacilityService/CreateFacilityResponse")]
        System.Threading.Tasks.Task<DataContractLibrary.FacilityResponse> CreateFacilityAsync(DataContractLibrary.FacilityRequest value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityService/UpdateFacility", ReplyAction="http://tempuri.org/IFacilityService/UpdateFacilityResponse")]
        DataContractLibrary.FacilityResponse UpdateFacility(DataContractLibrary.FacilityRequest value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFacilityService/UpdateFacility", ReplyAction="http://tempuri.org/IFacilityService/UpdateFacilityResponse")]
        System.Threading.Tasks.Task<DataContractLibrary.FacilityResponse> UpdateFacilityAsync(DataContractLibrary.FacilityRequest value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFacilityServiceChannel : AgrregatorSvc.FacilityServiceClient.IFacilityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FacilityServiceClient : System.ServiceModel.ClientBase<AgrregatorSvc.FacilityServiceClient.IFacilityService>, AgrregatorSvc.FacilityServiceClient.IFacilityService {
        
        public FacilityServiceClient() {
        }
        
        public FacilityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FacilityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacilityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FacilityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataContractLibrary.FacilityResponse CreateFacility(DataContractLibrary.FacilityRequest value) {
            return base.Channel.CreateFacility(value);
        }
        
        public System.Threading.Tasks.Task<DataContractLibrary.FacilityResponse> CreateFacilityAsync(DataContractLibrary.FacilityRequest value) {
            return base.Channel.CreateFacilityAsync(value);
        }
        
        public DataContractLibrary.FacilityResponse UpdateFacility(DataContractLibrary.FacilityRequest value) {
            return base.Channel.UpdateFacility(value);
        }
        
        public System.Threading.Tasks.Task<DataContractLibrary.FacilityResponse> UpdateFacilityAsync(DataContractLibrary.FacilityRequest value) {
            return base.Channel.UpdateFacilityAsync(value);
        }
    }
}
